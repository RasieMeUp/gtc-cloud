# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Build with Maven
      run: |
        mvn -B clean package --file pom.xml -Dmaven.test.skip=true

    - name: Connet to server & Open docker transfer port
      run: |
        ssh -t -p ${{ secrets.TEST_PORT }} ${{ secrets.TEST_USERNAME }}@${{ secrets.TEST_HOST }}
        expect {
        	"yes/no" { send "yes\r";exp_continue; }
        	"*password:*" {send "${{ secrets.TEST_PASSWORD }}\r" }
        }
        interact
        whoami
        cd /root
        ./open_port_2375.sh

    - name: Start to upload docker image
      run: |
        export DOCKER_HOST=tcp://${{ secrets.TEST_HOST }}:2375
        cd auth
        mvn docker:build

    - name: Connect to server & Close docker tranfer port & restart docker
      run: |
        ssh -t -p ${{ secrets.TEST_PORT }} ${{ secrets.TEST_USERNAME }}@${{ secrets.TEST_HOST }}
        expect {
            "yes/no" { send "yes\r";exp_continue; }
            "*password:*" {send "${{ secrets.TEST_PASSWORD }}\r" }
        }
        interact
        whoami
        cd /root
        ./close_port_2375.sh
        docker stop gtc_auth
        docker rm gtc_auth
        sudo docker run -p 8002:8002 --name gtc_auth -v /etc/localtime:/etc/localtime:ro -v /etc/timezone:/etc/timezone:ro -v /root/docker/logs/auth/:/ROOT/logs/ -d auth








